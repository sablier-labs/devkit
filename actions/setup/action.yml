name: "Devkit Setup"
description: "Internal composite action for installing the dependencies required for using the devkit"

inputs:
  frozen-lockfile:
    description: "Whether to install the dependencies with the frozen lockfile"
    default: "true"
    required: false
  package-manager:
    description: "Package manager to install Node.js dependencies with (auto-detected from lockfiles if not provided)"
    required: false

outputs:
  cache-status:
    description: "Descriptive cache status: 'primary', 'fallback', or 'not-found'"
    value: ${{ steps.node-cache.outputs.cache-status }}

runs:
  using: "composite"
  steps:
    - name: "Check out the repo"
      uses: "actions/checkout@v5"

    - name: "Detect package manager"
      id: detect-pm
      shell: bash
      run: | #shell
        if [ -n "${{ inputs.package-manager }}" ]; then
          pm="${{ inputs.package-manager }}"
        elif [ -f "bun.lockb" ] || [ -f "bun.lock" ]; then
          pm="bun"
        elif [ -f "pnpm-lock.yaml" ]; then
          pm="pnpm"
        elif [ -f "package-lock.json" ]; then
          pm="npm"
        else
          pm="npm"
        fi
        echo "package-manager=$pm" >> $GITHUB_OUTPUT

    - name: "Install Just"
      uses: "extractions/setup-just@v3"
      with:
        just-version: "1"

    - name: "Setup node"
      uses: "actions/setup-node@v4"
      with:
        node-version: ">20"

    - name: "Install Bun"
      if: steps.detect-pm.outputs.package-manager == 'bun'
      uses: "oven-sh/setup-bun@v2"
      with:
        bun-version: "latest"

    - name: "Install Pnpm"
      if: steps.detect-pm.outputs.package-manager == 'pnpm'
      uses: pnpm/action-setup@v4
      with:
        version: "10"

    - name: "Install Ni package manager resolver"
      run: "npm install -g @antfu/ni"
      shell: bash

    - uses: ./actions/node-cache
      id: node-cache
      with:
        package-manager: ${{ steps.detect-pm.outputs.package-manager }}

    - name: "Install the Node.js dependencies"
      run: | #shell
        if [ "$inputs.frozen-lockfile" = "true" ]; then
          ni --frozen
        else
          ni
        fi
      shell: "bash"
